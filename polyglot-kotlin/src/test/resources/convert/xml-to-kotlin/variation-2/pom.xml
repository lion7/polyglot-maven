<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example</groupId>
  <artifactId>polyglot-demo</artifactId>
  <version>${revision}</version>
  <name>Polyglot :: Kotlin :: Demo</name>
  <description>A demo of Maven Polyglot with Kotlin</description>
  <url>https://github.com/takari/polyglot-maven</url>
  <inceptionYear>2012</inceptionYear>
  <licenses>
    <license>
      <name>The Eclipse Public License, Version 1.0</name>
      <url>http://www.eclipse.org/legal/epl-v10.html</url>
      <distribution>repo</distribution>
      <comments>See LICENSE.txt at the root of this repository.</comments>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>thorntonrp</id>
      <name>Robert Thornton</name>
      <email>thorntonrp@example.com</email>
      <url>https://github.com/thorntonrp</url>
      <organization>Demo Organization</organization>
      <organizationUrl>http://www.example.com</organizationUrl>
      <roles>
        <role>Software Engineer</role>
      </roles>
      <timezone>UTC</timezone>
      <properties>
        <phone>1-XXX-XXX-XXXX</phone>
      </properties>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>Chris Cieslinski</name>
      <email>cieslinskicl@example.com</email>
      <url>https://github.com/malteseduck</url>
      <organization>Demo Organization</organization>
      <organizationUrl>http://www.example.com</organizationUrl>
      <roles>
        <role>Software Engineer</role>
      </roles>
      <timezone>UTC</timezone>
      <properties>
        <phone>1-XXX-XXX-XXXX</phone>
      </properties>
    </contributor>
  </contributors>
  <mailingLists>
    <mailingList>
      <name>polyglot-kotlin</name>
      <subscribe>mailto:polyglot-kotlin@example.com?subject=subscribe</subscribe>
      <unsubscribe>mailto:polyglot-kotlin@example.com?subject=unsubscribe</unsubscribe>
      <post>mailto:polyglot-kotlin@example.com</post>
      <archive>http://www.example.com/mail/polyglot-kotlin/</archive>
      <otherArchives>
        <otherArchive>http://mail.example.com/polyglot-kotlin/</otherArchive>
      </otherArchives>
    </mailingList>
  </mailingLists>
  <modules>
    <module>demo-kotlin-library</module>
    <module>demo-kotlin-plugin</module>
    <module>demo-kotlin-app</module>
    <module>demo-kotlin-parent</module>
  </modules>
  <distributionManagement>
    <repository>
      <uniqueVersion>false</uniqueVersion>
      <id>example-releases</id>
      <name>Example Release Repository</name>
      <url>http://repo.example.com/maven/releases/</url>
      <layout>legacy</layout>
    </repository>
    <snapshotRepository>
      <id>example-snapshots</id>
      <name>Example Snapshot Repository</name>
      <url>http://repo.example.com/maven/snapshots/</url>
    </snapshotRepository>
    <downloadUrl>http://repo.example.com/maven/artifacts</downloadUrl>
    <relocation>
      <groupId>org.example.polyglot</groupId>
      <artifactId>polyglot-kotlin-demo</artifactId>
      <version>1.0.1</version>
      <message>The group has been renamed</message>
    </relocation>
    <status>none</status>
  </distributionManagement>
  <properties>
    <empty.property></empty.property>
    <java.version>11</java.version>
    <kotlin.version>1.3.31</kotlin.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <release.version>1.0.0-SNAPSHOT</release.version>
    <revision>${release.version}</revision>
    <spring-boot-admin.version>2.1.1</spring-boot-admin.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-bom</artifactId>
        <version>${kotlin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-hateoas</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>de.codecentric</groupId>
      <artifactId>spring-boot-admin-starter-client</artifactId>
      <version>${spring-boot-admin.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>de.codecentric</groupId>
      <artifactId>spring-boot-admin-starter-server</artifactId>
      <version>${spring-boot-admin.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>junit</artifactId>
          <groupId>junit</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <releases>
        <checksumPolicy>fail</checksumPolicy>
      </releases>
      <snapshots>
        <checksumPolicy>warn</checksumPolicy>
      </snapshots>
      <id>mvn-main-repo</id>
      <name>Demo Main Repository</name>
      <url>https://repo.example.com/mvn-main-repo</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>mvn-plugin-repo</id>
      <name>Demo Plugin Repository</name>
      <url>https://repo.example.com/mvn-plugin-repo</url>
    </pluginRepository>
  </pluginRepositories>
  <reports>
    <note>The "reports" section consists of arbitrary XML</note>
    <coverage>62%</coverage>
  </reports>
  <reporting>
    <excludeDefaults>false</excludeDefaults>
    <outputDirectory>target/reports</outputDirectory>
    <plugins>
      <plugin>
        <groupId>org.codehaus.reports</groupId>
        <artifactId>reports-maven-plugin</artifactId>
        <version>1.2.3-SNAPSHOT</version>
        <reportSets>
          <reportSet>
            <id>reports</id>
            <reports>
              <report>issues</report>
              <report>dependencies</report>
              <report>coverage</report>
            </reports>
            <inherited>false</inherited>
            <configuration>
              <args>The "configuration" section consists of arbitrary XML</args>
            </configuration>
          </reportSet>
        </reportSets>
        <configuration>
          <args>The "configuration" section consists of arbitrary XML</args>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
  <profiles>
    <profile>
      <id>release</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <jdk>1.8</jdk>
        <os>
          <name>Windows 10</name>
          <family>windows</family>
          <arch>x64</arch>
          <version>8.0.0</version>
        </os>
        <property>
          <name>foo</name>
          <value>bar</value>
        </property>
        <file>
          <missing>bar.txt</missing>
          <exists>foo.txt</exists>
        </file>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-enforcer-plugin</artifactId>
              <executions>
                <execution>
                  <id>enforce-revision-is-set</id>
                  <goals>
                    <goal>enforce</goal>
                  </goals>
                  <configuration>
                    <rules>
                      <requireProperty>
                        <property>release.version</property>
                        <regex>v\d{4}\.\d{2}\.\d{2}</regex>
                      </requireProperty>
                    </rules>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
      <distributionManagement>
        <repository>
          <uniqueVersion>false</uniqueVersion>
          <id>example-releases</id>
          <name>Example Release Repository</name>
          <url>http://repo.example.com/maven/releases/</url>
          <layout>legacy</layout>
        </repository>
        <snapshotRepository>
          <id>example-snapshots</id>
          <name>Example Snapshot Repository</name>
          <url>http://repo.example.com/maven/snapshots/</url>
        </snapshotRepository>
        <site>
          <id>example-documents</id>
          <name>Example Documents</name>
          <url>http://repo.example.com/maven/documents/</url>
        </site>
        <downloadUrl>http://repo.example.com/maven/artifacts</downloadUrl>
        <status>none</status>
      </distributionManagement>
      <properties>
        <empty.property></empty.property>
        <java.version>11</java.version>
        <kotlin.version>1.3.31</kotlin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <release.version>1.0.0-SNAPSHOT</release.version>
        <revision>${release.version}</revision>
        <spring-boot-admin.version>2.1.1</spring-boot-admin.version>
      </properties>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-bom</artifactId>
            <version>${kotlin.version}</version>
            <type>pom</type>
            <scope>import</scope>
          </dependency>
          <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-dependencies</artifactId>
            <version>${spring-boot.version}</version>
            <type>pom</type>
            <scope>import</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-configuration-processor</artifactId>
          <scope>compile</scope>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-devtools</artifactId>
          <scope>compile</scope>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>de.codecentric</groupId>
          <artifactId>spring-boot-admin-starter-client</artifactId>
          <version>${spring-boot-admin.version}</version>
          <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>de.codecentric</groupId>
          <artifactId>spring-boot-admin-starter-server</artifactId>
          <version>${spring-boot-admin.version}</version>
          <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-test</artifactId>
          <scope>test</scope>
          <exclusions>
            <exclusion>
              <artifactId>junit</artifactId>
              <groupId>junit</groupId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-test</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter-engine</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <repositories>
        <repository>
          <releases>
            <checksumPolicy>fail</checksumPolicy>
          </releases>
          <snapshots>
            <checksumPolicy>warn</checksumPolicy>
          </snapshots>
          <id>mvn-main-repo</id>
          <name>Demo Main Repository</name>
          <url>https://repo.example.com/mvn-main-repo</url>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <releases>
            <checksumPolicy>warn</checksumPolicy>
          </releases>
          <snapshots>
            <checksumPolicy>ignore</checksumPolicy>
          </snapshots>
          <id>mvn-plugin-repo</id>
          <name>Demo Plugin Repository</name>
          <url>https://repo.example.com/mvn-plugin-repo</url>
        </pluginRepository>
      </pluginRepositories>
      <reports>
        <note>The "reports" section consists of arbitrary XML</note>
        <coverage>62%</coverage>
      </reports>
      <reporting>
        <excludeDefaults>false</excludeDefaults>
        <outputDirectory>target/reports</outputDirectory>
        <plugins>
          <plugin>
            <groupId>org.codehaus.reports</groupId>
            <artifactId>reports-maven-plugin</artifactId>
            <version>1.2.3-SNAPSHOT</version>
            <reportSets>
              <reportSet>
                <id>reports</id>
                <reports>
                  <report>issues</report>
                  <report>dependencies</report>
                  <report>coverage</report>
                </reports>
                <inherited>false</inherited>
                <configuration>
                  <args>The "configuration" section consists of arbitrary XML</args>
                </configuration>
              </reportSet>
            </reportSets>
            <configuration>
              <args>The "configuration" section consists of arbitrary XML</args>
            </configuration>
          </plugin>
        </plugins>
      </reporting>
    </profile>
    <profile>
      <id>code-coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.2</version>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>prepare-agent-integration</id>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
              </execution>
              <execution>
                <id>reports</id>
                <goals>
                  <goal>report</goal>
                  <goal>report-integration</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>java11</id>
      <activation>
        <jdk>11</jdk>
      </activation>
    </profile>
  </profiles>
</project>
